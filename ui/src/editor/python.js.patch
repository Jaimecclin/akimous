--- /Users/ray/Code/akimous/ui/node_modules/codemirror/mode/python/python.js
+++ /Users/ray/Code/akimous/ui/src/editor/python.js
@@ -3,9 +3,9 @@
 
 (function(mod) {
   if (typeof exports == "object" && typeof module == "object") // CommonJS
-    mod(require("../../lib/codemirror"));
+    mod(require("codemirror/lib/codemirror"));
   else if (typeof define == "function" && define.amd) // AMD
-    define(["../../lib/codemirror"], mod);
+    define(["codemirror/lib/codemirror"], mod);
   else // Plain browser env
     mod(CodeMirror);
 })(function(CodeMirror) {
@@ -56,7 +56,7 @@
     if (parserConf.extra_builtins != undefined)
       myBuiltins = myBuiltins.concat(parserConf.extra_builtins);
 
-    var py3 = !(parserConf.version && Number(parserConf.version) < 3)
+    var py3 = true;
     if (py3) {
       // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator
       var identifiers = parserConf.identifiers|| /^[_A-Za-z\u00A1-\uFFFF][_A-Za-z0-9\u00A1-\uFFFF]*/;
@@ -157,7 +157,7 @@
 
       if (stream.match(delimiters)) return "punctuation";
 
-      if (state.lastToken == "." && stream.match(identifiers))
+      if (state.lastToken == "." && stream.match(identifiers) && stream.peek() !== '(')
         return "property";
 
       if (stream.match(keywords) || stream.match(wordOperators))
@@ -172,8 +172,11 @@
       if (stream.match(identifiers)) {
         if (state.lastToken == "def" || state.lastToken == "class")
           return "def";
+        if (stream.peek() === '(') return 'function';
         return "variable";
       }
+
+      if (stream.peek() === '(') return 'function';
 
       // Handle non-detected items
       stream.next();
@@ -359,7 +362,6 @@
 
         if (style && style != "comment")
           state.lastToken = (style == "keyword" || style == "punctuation") ? stream.current() : style;
-        if (style == "punctuation") style = null;
 
         if (stream.eol() && state.lambda)
           state.lambda = false;

